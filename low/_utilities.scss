@use "config";
@use "functions";
@use "mixins";


// Background utilities
@if functions.get-in(config.$utilities, "background-color", true) {
    @include mixins.utility("bg", config.$background-color-v, (background-color), config.$background-color);
}
@if functions.get-in(config.$utilities, "background-repeat", true) {
    @include mixins.utility("bg", config.$background-repeat-v, (background-repeat), config.$background-repeat);
}
@if functions.get-in(config.$utilities, "background-size", true) {
    @include mixins.utility("bg", config.$background-size-v, (background-size), config.$background-size);
}


// Border utilities
@if functions.get-in(config.$utilities, "border-color", true) {
    @include mixins.utility("b", config.$border-color-v, (border-color), config.$border-color);
}
@if functions.get-in(config.$utilities, "border-radius", true) {
    @include mixins.utility("r", config.$border-radius-v, (border-radius), config.$border-radius);
}
@if functions.get-in(config.$utilities, "border-style", true) {
    @include mixins.utility("b", config.$border-style-v, (border-style), config.$border-style);
}
@if functions.get-in(config.$utilities, "border-width", true) {
    @include mixins.utility("b", config.$border-width-v, (border-width), config.$border-width);
}


// Effects utilities
@if functions.get-in(config.$utilities, "box-shadow", true) {
    @include mixins.utility("shadow", config.$box-shadow-v, (box-shadow), config.$box-shadow);
}
@if functions.get-in(config.$utilities, "opacity", true) {
    @include mixins.utility("o", config.$opacity-v, (opacity), config.$opacity);
}


// Flexbox and grid utilities
@if functions.get-in(config.$utilities, "align-content", true) {
    @include mixins.utility("content", config.$align-content-v, (align-content), config.$align-content);
}
@if functions.get-in(config.$utilities, "align-items", true) {
    @include mixins.utility("items", config.$align-items-v, (align-items), config.$align-items);
}
@if functions.get-in(config.$utilities, "align-self", true) {
    @include mixins.utility("self", config.$align-self-v, (align-self), config.$align-self);
}
@if functions.get-in(config.$utilities, "flex", true) {
    @include mixins.utility("flex", config.$flex-v, (flex), config.$flex);
}
@if functions.get-in(config.$utilities, "flex-direction", true) {
    @include mixins.utility("flex", config.$flex-direction-v, (flex-direction), config.$flex-direction);
}
@if functions.get-in(config.$utilities, "flex-grow", true) {
    @include mixins.utility("flex", config.$flex-grow-v, (flex-grow), config.$flex-grow);
}
@if functions.get-in(config.$utilities, "flex-shrink", true) {
    @include mixins.utility("flex", config.$flex-shrink-v, (flex-shrink), config.$flex-shrink);
}
@if functions.get-in(config.$utilities, "flex-wrap", true) {
    @include mixins.utility("flex", config.$flex-wrap-v, (flex-wrap), config.$flex-wrap);
}
@if functions.get-in(config.$utilities, "gap", true) {
    @include mixins.utility("gap", config.$gap-v, (gap), config.$gap);
}
@if functions.get-in(config.$utilities, "grid-template-columns", true) {
    @include mixins.utility("grid-cols", config.$grid-template-columns-v, (grid-template-columns), config.$grid-template-columns);
}
@if functions.get-in(config.$utilities, "grid-template-rows", true) {
    @include mixins.utility("grid-rows", config.$grid-template-rows-v, (grid-template-rows), config.$grid-template-rows);
}
@if functions.get-in(config.$utilities, "justify-content", true) {
    @include mixins.utility("justify", config.$justify-content-v, (justify-content), config.$justify-content);
}
@if functions.get-in(config.$utilities, "order", true) {
    @include mixins.utility("order", config.$order-v, (order), config.$order);
}


// Interactivity utilities
@if functions.get-in(config.$utilities, "cursor", true) {
    @include mixins.utility("cursor", config.$cursor-v, (cursor), config.$cursor);
}
@if functions.get-in(config.$utilities, "user-select", true) {
    @include mixins.utility("select", config.$user-select-v, (user-select), config.$user-select);
}


// Layout utilities
@if functions.get-in(config.$utilities, "bottom", true) {
    @include mixins.utility("bottom", config.$bottom-v, (bottom), config.$inset);
}
@if functions.get-in(config.$utilities, "display", true) {
    @include mixins.utility("d", config.$display-v, (display), config.$display);
}
@if functions.get-in(config.$utilities, "float", true) {
    @include mixins.utility("float", config.$float-v, (float), config.$float);
}
@if functions.get-in(config.$utilities, "left", true) {
    @include mixins.utility("left", config.$left-v, (left), config.$inset);
}
@if functions.get-in(config.$utilities, "overflow", true) {
    @include mixins.utility("overflow", config.$overflow-v, (overflow), config.$overflow);
}
@if functions.get-in(config.$utilities, "overflow-x", true) {
    @include mixins.utility("overflow-x", config.$overflow-v, (overflow-x), config.$overflow);
}
@if functions.get-in(config.$utilities, "overflow-y", true) {
    @include mixins.utility("overflow-y", config.$overflow-v, (overflow-y), config.$overflow);
}
@if functions.get-in(config.$utilities, "position", true) {
    @include mixins.utility("position", config.$position-v, (position), config.$position);
}
@if functions.get-in(config.$utilities, "right", true) {
    @include mixins.utility("right", config.$right-v, (right), config.$inset);
}
@if functions.get-in(config.$utilities, "top", true) {
    @include mixins.utility("top", config.$top-v, (top), config.$inset);
}
@if functions.get-in(config.$utilities, "z-index", true) {
    @include mixins.utility("z", config.$z-index-v, (z-index), config.$z-index);
}


// Sizing utilities
@if functions.get-in(config.$utilities, "height", true) {
    @include mixins.utility("h", config.$height-v, (height), config.$height);
}
@if functions.get-in(config.$utilities, "max-height", true) {
    @include mixins.utility("maxh", config.$max-height-v, (max-height), config.$max-height);
}
@if functions.get-in(config.$utilities, "max-width", true) {
    @include mixins.utility("maxw", config.$max-width-v, (max-width), config.$max-width);
}
@if functions.get-in(config.$utilities, "min-height", true) {
    @include mixins.utility("minh", config.$min-height-v, (min-height), config.$min-height);
}
@if functions.get-in(config.$utilities, "min-width", true) {
    @include mixins.utility("minw", config.$min-width-v, (min-width), config.$min-width);
}
@if functions.get-in(config.$utilities, "width", true) {
    @include mixins.utility("w", config.$width-v, (width), config.$width);
}


// Spacing utilities
@if functions.get-in(config.$utilities, "margin", true) {
    @include mixins.utility("m", config.$margin-v, (margin), config.$margin);
}
@if functions.get-in(config.$utilities, "margin-bottom", true) {
    @include mixins.utility("mb", config.$margin-v, (margin-bottom), config.$margin);
}
@if functions.get-in(config.$utilities, "margin-left", true) {
    @include mixins.utility("ml", config.$margin-v, (margin-left), config.$margin);
}
@if functions.get-in(config.$utilities, "margin-right", true) {
    @include mixins.utility("mr", config.$margin-v, (margin-right), config.$margin);
}
@if functions.get-in(config.$utilities, "margin-top", true) {
    @include mixins.utility("mt", config.$margin-v, (margin-top), config.$margin);
}
@if functions.get-in(config.$utilities, "margin-x", true) {
    @include mixins.utility("mx", config.$margin-v, (margin-left margin-right), config.$margin);
}
@if functions.get-in(config.$utilities, "margin-y", true) {
    @include mixins.utility("my", config.$margin-v, (margin-bottom margin-top), config.$margin);
}
@if functions.get-in(config.$utilities, "padding", true) {
    @include mixins.utility("p", config.$padding-v, (padding), config.$padding);
}
@if functions.get-in(config.$utilities, "padding-bottom", true) {
    @include mixins.utility("pb", config.$padding-v, (padding-bottom), config.$padding);
}
@if functions.get-in(config.$utilities, "padding-left", true) {
    @include mixins.utility("pl", config.$padding-v, (padding-left), config.$padding);
}
@if functions.get-in(config.$utilities, "padding-right", true) {
    @include mixins.utility("pr", config.$padding-v, (padding-right), config.$padding);
}
@if functions.get-in(config.$utilities, "padding-top", true) {
    @include mixins.utility("pt", config.$padding-v, (padding-top), config.$padding);
}
@if functions.get-in(config.$utilities, "padding-x", true) {
    @include mixins.utility("px", config.$padding-v, (padding-left padding-right), config.$padding);
}
@if functions.get-in(config.$utilities, "padding-y", true) {
    @include mixins.utility("py", config.$padding-v, (padding-top padding-bottom), config.$padding);
}


// Typography utilities
@if functions.get-in(config.$utilities, "font-family", true) {
    @include mixins.utility("font", config.$font-family-v, (font-family), config.$font-family);
}
@if functions.get-in(config.$utilities, "font-size", true) {
    @include mixins.utility("text", config.$font-size-v, (font-size), config.$font-size);
}
@if functions.get-in(config.$utilities, "font-style", true) {
    @include mixins.utility("text", config.$font-style-v, (font-style), config.$font-style);
}
@if functions.get-in(config.$utilities, "font-weight", true) {
    @include mixins.utility("font", config.$font-weight-v, (font-weight), config.$font-weight);
}
@if functions.get-in(config.$utilities, "line-height", true) {
    @include mixins.utility("lh", config.$line-height-v, (line-height), config.$line-height);
}
@if functions.get-in(config.$utilities, "text-align", true) {
    @include mixins.utility("text", config.$text-align-v, (text-align), config.$text-align);
}
@if functions.get-in(config.$utilities, "text-color", true) {
    @include mixins.utility("text", config.$text-color-v, (color), config.$text-color);
}
@if functions.get-in(config.$utilities, "text-decoration", true) {
    @include mixins.utility("text", config.$text-decoration-v, (text-decoration), config.$text-decoration);
}
@if functions.get-in(config.$utilities, "text-transform", true) {
    @include mixins.utility("text", config.$text-transform-v, (text-transform), config.$text-transform);
}
@if functions.get-in(config.$utilities, "vertical-align", true) {
    @include mixins.utility("align", config.$vertical-align-v, (vertical-align), config.$vertical-align);
}
